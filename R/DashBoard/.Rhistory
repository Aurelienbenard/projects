return (result)
### better solution
# return(c(mat %*% vec))
}
matrixA = matrix(1:12, 3, 4)
matrixA
vectorB = c(1:4)
mat_times_vec(matrixA, vectorB)
MM <- function(A,x){
for (i in 1:nrow(A))
{tempsum = 0
for (j in 1:ncol(A))
{
temp = A[i,j]*x[j]
tempsum = tempsum + temp
}
vector = append(vector,tempsum)
}
return(vector)
}
matrixA = matrix(1:12, 3, 4)
matrixA
vectorB = c(1:4)
MMM(matrixA,vectorB)
MM <- function(A,x){
for (i in 1:nrow(A))
{tempsum = 0
for (j in 1:ncol(A))
{
temp = A[i,j]*x[j]
tempsum = tempsum + temp
}
vector = append(vector,tempsum)
}
return(vector)
}
matrixA = matrix(1:12, 3, 4)
matrixA
vectorB = c(1:4)
MM(matrixA,vectorB)
Names <- "John Andrew Thomas"
name<-unlist(strsplit(Names,split=' '))
paste(name,"gmail.com",sep="@",collapse = ";")
#sep: a character string to separate the terms.
#collapse: an optional character string to separate the results.
Names <- 'John Andrew Thomas'
splitnames = strsplit(Names, split = ' ')[[1]]
email = paste0(splitnames,'@gmail.com',collapse = ';')
print(email)
MAD <- function(x){
for (i in x){
vector = c()
AbsDiff = abs(i - median(x))
vector = append(vector,AbsDiff)
}
return(median(vector))
}
c(matrixA %*% vectorB)
a = c(1,2,3,4,5)
a - median(a)
cat(a,4)
MAD <- function(x){
for (i in x){
vector = c()
AbsDiff = abs(i - median(x))
vector = cat(vector,AbsDiff)
}
return(median(vector))
}
setwd("~/Desktop/NYCDSA/Week2/")
library(ggplot2)
library(dplyr)
nyc_jobs <- readr::read_csv("./NYC_Jobs.csv")
head(nyc_jobs)
annual = filter(nyc_jobs,Salary.Frequency == 'Annual')
nyc_jobs <- readr::read_csv("./NYC_Jobs.csv")
head(nyc_jobs)
annual = filter(nyc_jobs,`Salary Frequency` == 'Annual')
hourly = filter(nyc_jobs,`Salary Frequency` == 'Hourly')
daily = filter(nyc_jobs,`Salary Frequency` == 'Daily')
setwd("~/Desktop/NYCDSA/Week2/")
library(ggplot2)
library(dplyr)
nyc_jobs <- readr::read_csv("./NYC_Jobs.csv")
head(nyc_jobs)
annual = filter(nyc_jobs,`Salary Frequency` == 'Annual')
hourly = filter(nyc_jobs,`Salary Frequency` == 'Hourly')
daily = filter(nyc_jobs,`Salary Frequency` == 'Daily')
hourly = mutate(hourly,`Salary Range From` = `Salary Range From`*2080, `Salary Range To` = `Salary Range To`*2080)
nyc_jobs$`Salary Range From`
setwd("~/Desktop/NYCDSA/Week2/")
library(ggplot2)
library(dplyr)
nyc_jobs <- readr::read_csv("./NYC_Jobs.csv")
head(nyc_jobs)
nyc_jobs$`Salary Range From`=is.numeric(nyc_jobs$`Salary Range From`)
nyc_jobs$`Salary Range To`=is.numeric(nyc_jobs$`Salary Range To`)
annual = filter(nyc_jobs,`Salary Frequency` == 'Annual')
hourly = filter(nyc_jobs,`Salary Frequency` == 'Hourly')
daily = filter(nyc_jobs,`Salary Frequency` == 'Daily')
hourly = mutate(hourly,`Salary Range From` = `Salary Range From`*2080, `Salary Range To` = `Salary Range To`*2080)
daily = mutate(daily,`Salary Range From` = `Salary Range From`*260, `Salary Range To` = `Salary Range To`*260)
nyc_jobs = rbind(annual,hourly,daily)
names(nyc_jobs)
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,mean(`Salary Range From`),median(`Salary Range From`),mean(`Salary Range To`),mean(`Salary Range To`))
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,mean(`Salary Range From`),median(`Salary Range From`),mean(`Salary Range To`),median(`Salary Range To`))
compare <- function(s1, s2){
return(ifelse(nchar(s1) == nchar(s2), "Equal Length", "Not Equal Length"))
}
compare("EPS568","Summer")
compare("EPS568","SummerA")
names(nyc_jobs)
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,mean(`Salary Range From`))
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,Mean = mean(`Salary Range From`)) %>%
arrange(.,desc(Mean))
nyc_jobs$`Salary Range From`
setwd("~/Desktop/NYCDSA/Week2/")
library(ggplot2)
library(dplyr)
nyc_jobs <- readr::read_csv("./NYC_Jobs.csv")
head(nyc_jobs)
nyc_jobs$`Salary Range From`=is.numeric(nyc_jobs$`Salary Range From`)
nyc_jobs$`Salary Range To`=is.numeric(nyc_jobs$`Salary Range To`)
annual = filter(nyc_jobs,`Salary Frequency` == 'Annual')
hourly = filter(nyc_jobs,`Salary Frequency` == 'Hourly')
daily = filter(nyc_jobs,`Salary Frequency` == 'Daily')
hourly = mutate(hourly,`Salary Range From` = `Salary Range From`*2080, `Salary Range To` = `Salary Range To`*2080)
daily = mutate(daily,`Salary Range From` = `Salary Range From`*260, `Salary Range To` = `Salary Range To`*260)
nyc_jobs = rbind(annual,hourly,daily)
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,mean(`Salary Range From`),median(`Salary Range From`),mean(`Salary Range To`),median(`Salary Range To`))
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,Mean = mean(`Salary Range From`)) %>%
arrange(.,desc(Mean))
class(nyc_jobs$`Salary Range From`)
nyc_jobs <- readr::read_csv("./NYC_Jobs.csv")
head(nyc_jobs)
class(nyc_jobs$`Salary Range From`)
as.numeric(as.character(nyc_jobs$`Salary Range From`))
nyc_jobs$`Salary Range From`=as.numeric(nyc_jobs$`Salary Range From`)
nyc_jobs$`Salary Range To`=as.numeric(nyc_jobs$`Salary Range To`)
class(nyc_jobs$`Salary Range From`)
nyc_jobs$`Salary Range From`
setwd("~/Desktop/NYCDSA/Week2/")
library(ggplot2)
library(dplyr)
nyc_jobs <- readr::read_csv("./NYC_Jobs.csv")
head(nyc_jobs)
nyc_jobs$`Salary Range From`=as.numeric(nyc_jobs$`Salary Range From`)
nyc_jobs$`Salary Range To`=as.numeric(nyc_jobs$`Salary Range To`)
annual = filter(nyc_jobs,`Salary Frequency` == 'Annual')
hourly = filter(nyc_jobs,`Salary Frequency` == 'Hourly')
daily = filter(nyc_jobs,`Salary Frequency` == 'Daily')
hourly = mutate(hourly,`Salary Range From` = `Salary Range From`*2080, `Salary Range To` = `Salary Range To`*2080)
daily = mutate(daily,`Salary Range From` = `Salary Range From`*260, `Salary Range To` = `Salary Range To`*260)
nyc_jobs = rbind(annual,hourly,daily)
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,mean(`Salary Range From`),median(`Salary Range From`),mean(`Salary Range To`),median(`Salary Range To`))
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,Mean = mean(`Salary Range From`)) %>%
arrange(.,desc(Mean))
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,Mean = mean(`Salary Range From`)) %>%
arrange(.,desc(Mean)) %>%
print(.,1)
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,Mean = mean(`Salary Range From`)) %>%
arrange(.,desc(Mean)) %>%
head(.,1)
names(nyc_jobs)
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
group_by(`Posting Type`) %>%
summarise(.,mean(range))
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
group_by(.,Level) %>%
arrange(.,desc(mean(range)))
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
group_by(.,Level) %>%
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
group_by(.,Level) %>%
summarise(.,mean(range)) %>%
arrange(.,desc(mean(range)))
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
group_by(.,Level) %>%
summarise(.,mean(range))
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
group_by(.,Level) %>%
summarise(.,mean(range)) %>%
arrange(.,desc)
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
group_by(.,Level) %>%
summarise(.,Mean = mean(range)) %>%
arrange(.,desc(Mean))
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
arrange(.,desc(range))
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
arrange(.,desc(range)) %>%
head(.,1) %>%
select(.,`Civil Service Title`)
library(ggplot2)
library(dplyr)
subset = select(mpg,V1=year,V2 = cyl,V3 = cty,V4=hwy)
mpg %>%
group_by(.,cyl) %>%
summarise(.,mean(cty),mean(hwy))
max <- mpg %>%
group_by(.,manufacturer) %>%
summarise(.,max(cty))
filter(mpg,cty == max$`max(cty)`)
setwd("~/Desktop/NYCDSA/Week2/")
library(ggplot2)
library(dplyr)
nyc_jobs <- readr::read_csv("./NYC_Jobs.csv")
head(nyc_jobs)
nyc_jobs$`Salary Range From`=as.numeric(nyc_jobs$`Salary Range From`)
nyc_jobs$`Salary Range To`=as.numeric(nyc_jobs$`Salary Range To`)
annual = filter(nyc_jobs,`Salary Frequency` == 'Annual')
hourly = filter(nyc_jobs,`Salary Frequency` == 'Hourly')
daily = filter(nyc_jobs,`Salary Frequency` == 'Daily')
hourly = mutate(hourly,`Salary Range From` = `Salary Range From`*2080, `Salary Range To` = `Salary Range To`*2080)
daily = mutate(daily,`Salary Range From` = `Salary Range From`*260, `Salary Range To` = `Salary Range To`*260)
nyc_jobs = rbind(annual,hourly,daily)
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,mean(`Salary Range From`),median(`Salary Range From`),mean(`Salary Range To`),median(`Salary Range To`))
nyc_jobs %>%
group_by(.,Agency) %>%
summarise(.,Mean = mean(`Salary Range From`)) %>%
arrange(.,desc(Mean)) %>%
head(.,1)
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
group_by(`Posting Type`) %>%
summarise(.,mean(range))
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
group_by(.,Level) %>%
summarise(.,Mean = mean(range)) %>%
arrange(.,desc(Mean))
nyc_jobs %>%
group_by(.,Agency) %>%
nyc_jobs %>%
mutate(.,range = `Salary Range To`- `Salary Range From`) %>%
arrange(.,desc(range)) %>%
head(.,1) %>%
select(.,`Civil Service Title`)
library(ggplot2)
library(dplyr)
#a
data(mpg)
#b
subset = select(mpg,V1=year,V2 = cyl,V3 = cty,V4=hwy)
#c
mpg %>%
group_by(.,cyl) %>%
summarise(.,mean(cty),mean(hwy))
#d
max <- mpg %>%
group_by(.,manufacturer) %>%
summarise(.,max(cty))
filter(mpg,cty == max$`max(cty)`)
install.packages('shiny')
shiny::runApp('Desktop/ShinyDemo')
runApp('Desktop/NYCDSA/Week2/flights/flights')
library(shiny)
library(shiny)
function(input,outpu){
}
library(shiny)
fluidPage(
)
runApp('Desktop/flights')
runApp('Desktop/flights')
runApp('Desktop/flights')
runApp('Desktop/flights')
runApp('Desktop/flights')
runApp('Desktop/flights')
runApp('Desktop/NYCDSA/Week2/flights/flights')
install.packages('data.table')
install.packages("data.table")
shiny::runApp('Desktop/flights')
runApp('Desktop/flights')
runApp('Desktop/flights')
shiny::runApp('Desktop/AppStore')
library(xtable)
runApp('Desktop/AppStore')
shiny::runApp('Desktop/AppStore/dashboard')
runApp('Desktop/AppStore/dashboard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
plot_ly(data = app,x = ~price,y = ~size_bytes)
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
View(app)
plot_ly(app, x = prime_genre, y = price, name = "test", type = "bar")
View(app)
rating <- app %>%
group_by(.,prime_genre) %>%
summarise(.,AVG = mean(user_rating)) %>%
arrange(.,desc(AVG))
rating
ggplot(data = rating, aes(x=prime_genre,y=AVG)) +
geom_bar(stat = 'identity', position = position_dodge())
ggplot(data = rating, aes(x=reorder(prime_genre,-AVG),y=AVG)) +
geom_bar(stat = 'identity', position = position_dodge())
test <- ggplot(data = rating, aes(x=reorder(prime_genre,-AVG),y=AVG)) +
geom_bar(stat = 'identity', position = position_dodge())
ggplotly(test)
install.packages("Cairo")
library(Cairo)
library(Cairo)
library("Cairo", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
ggplotly(test)
View(a)
View(a)
plot_ly(a,x = ~prime_genre, y = ~Number, type = "bar")
View(a)
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
shiny::runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
View(a)
plot_ly(data = a, x = ~prime_genre, y = ~price, type = "bar")
plot_ly(data = a, x = ~prime_genre, y = ~Rating, type = "bar")
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
plot_ly(data = a, x = ~prime_genre, y = ~Number, type = "bar")
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
View(a)
a %>%
select(prime_genre)
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
library("Cairo", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:Cairo", unload=TRUE)
library("Cairo", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
View(app)
names(app)
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
View(app)
app %>%
filter(app$price==0) %>%
mutate(free = "Free")
free = app %>%
filter(app$price==0) %>%
mutate(free = "Free")
paid = app %>%
filter(app$price!=0) %>%
mutate(free = "Paid")
app <- cbind(free,paid)
app <- rbind(free,paid)
View(app)
b <- app %>%
group_by(free) %>%
summarise("Number" = n(),
"Number of Reviews" = mean(rating_count_tot),
"Rating Score" = mean(user_rating),
"App Size(MB)" = mean(size_bytes),
"App Price" = mean(price),
"Number of Supported Device" = mean(sup_devices.num),
"Number of Supported Languages" = mean(lang.num))
View(b)
ggplot(app, aes(x=reorder(prime_genre,-Number), y = Number,color = free)) +
geom_bar(aes(fill=prime_genre),stat="identity")
View(app)
app %>%
group_by(prime_genre) %>%
summarise(Number = n()) %>%
ggplot(app, aes(x=reorder(prime_genre,-Number), y = Number,color = free)) +
geom_bar(aes(fill=prime_genre),stat="identity")
app %>%
group_by(prime_genre) %>%
summarise(Number = n())
app %>%
group_by(prime_genre) %>%
summarise(Number = n(),free)
app %>%
group_by(prime_genre,free) %>%
summarise(Number = n())
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
app %>%
group_by(prime_genre,free) %>%
summarise(Number = n()) %>%
ggplot(aes(prime_genre,Number,color = free)) +
geom_bar(stat = "identity")
app %>%
group_by(prime_genre,free) %>%
summarise(Number = n()) %>%
ggplot(aes(prime_genre,Number,fill = free)) +
geom_bar(stat = "identity")
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
View(a)
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
app %>%
group_by(prime_genre,free) %>%
summarise(Number = n()) %>%
ggplot(aes(prime_genre,Number,fill = free)) +
geom_bar(stat = "identity") +
geom_hline(aes(yintercept = mean(Number)))
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
class(app$prime_genre)
app$prime_genre = as.factor(app$prime_genre)
class(app$prime_genre)
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
View(app)
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
a <- app %>%
group_by(prime_genre) %>%
summarise("Number" = n(),
"Number of Reviews" = round(mean(rating_count_tot),2),
"Rating Score" = round(mean(user_rating),2),
"App Size(MB)" = round(mean(size_bytes),2),
"App Price" = round(mean(price),2),
"Number of Supported Device" = round(mean(sup_devices.num),2),
"Number of Supported Languages" = round(mean(lang.num),2))
View(a)
runApp('Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
description = read.csv('appleStore_description.csv', stringsAsFactors = F)
description = read.csv('appleStore_description.csv', stringsAsFactors = F)
setwd("~/Desktop/AppStore/shinyDashBoard")
description = read.csv('appleStore_description.csv', stringsAsFactors = F)
View(description)
View(app)
merge(x=app,y=description,by = "track_name",all.x = T)
full = merge(x=app,y=description,by = "track_name",all.x = T)
View(full)
class(full)
names(full)
full[0:9,12]
names(full)
drops <- c("id","size_bytes.y")
description[,!(names(description) %in% drops)]
description = description[,!(names(description) %in% drops)]
View(description)
newfull = full[,!(names(full) %in% drops)]
View(newfull)
runApp('~/Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('~/Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('~/Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
names(app)
correlation = app %>%
select(size_bytes,price,rating_count_tot, user_rating, sup_devices.num,lang.num)
View(correlation)
corr <- round(cor(correlation),1)
corr
p.mat <- cor_pmat(correlation)
install.packages("ggcorrplot")
library(ggcorrplot)
p.mat <- cor_pmat(correlation)
ggcorrplot(corr)
ggcorrplot(corr,lab = T)
runApp('~/Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
app %>%
select(prime_genre,price) %>%
arrange(desc(price))
app %>%
select(prime_genre,price) %>%
arrange(desc(price),10)
app %>%
select(prime_genre,price) %>%
arrange(desc(price)) %>%
head(10)
runApp('~/Desktop/NYCDSA/Week2/shinyApps/shinyDashBoard')
runApp('~/Desktop/AppStore/app')
